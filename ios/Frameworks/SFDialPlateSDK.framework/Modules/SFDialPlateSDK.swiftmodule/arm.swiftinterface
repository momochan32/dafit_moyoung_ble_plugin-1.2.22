// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name SFDialPlateSDK
import CoreBluetooth
import Foundation
@_exported import SFDialPlateSDK
import Swift
import UIKit
import ZipSDK
import _Concurrency
extension Foundation.NSData {
  @objc override dynamic open var debugDescription: Swift.String {
    @objc get
  }
}
@objc public class SFFile : ObjectiveC.NSObject {
  @objc final public let fileName: Swift.String
  @objc final public let file: Foundation.Data
  @objc public init(fileName: Swift.String, file: Foundation.Data)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class QDataTools {
  public static func SplitData(data: Foundation.Data, upperlimit: Swift.Int) -> Swift.Array<Foundation.Data>
  public static func Reverse(srcData: Foundation.Data) -> Foundation.Data
  @objc deinit
}
@objc public class SFCommonLogModel : ObjectiveC.NSObject {
  @objc final public let timestamp: Swift.Int
  @objc final public let message: Swift.String
  @objc public init(timestamp: Swift.Int, message: Swift.String)
  @objc deinit
}
@objc public enum SFErrorType : ObjectiveC.NSInteger {
  case Unknown = 0
  case Timeout
  case NoConnection
  case Canceled
  case Disconnected
  case FailedToConnect
  case InvalidDataStruct
  case ErrorCode
  case EncodeError
  case InvalidValue
  case OutOfRange
  case UnzipFailed
  case InvalidFile
  case LoadFileFailed
  case DeviceAbort
  case FileSliceTooLarge
  case InsufficientDeviceSpace
  public init?(rawValue: ObjectiveC.NSInteger)
  public typealias RawValue = ObjectiveC.NSInteger
  public var rawValue: ObjectiveC.NSInteger {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class SFError : ObjectiveC.NSObject {
  @objc public var errType: SFDialPlateSDK.SFErrorType
  @objc public var errInfo: Swift.String
  @objc public var devErrorCode: Foundation.NSNumber?
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol SFDialPlateManagerDelegate {
  @objc func dialPlateManager(manager: SFDialPlateSDK.SFDialPlateManager, didUpdateBLEState bleState: CoreBluetooth.CBManagerState)
  @objc func dialPlateManager(manager: SFDialPlateSDK.SFDialPlateManager, progress: Swift.Int)
  @objc func dialPlateManager(manager: SFDialPlateSDK.SFDialPlateManager, complete error: SFDialPlateSDK.SFError?)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class SFDialPlateManager : ObjectiveC.NSObject {
  @objc public static var share: SFDialPlateSDK.SFDialPlateManager
  @objc public var isBusy: Swift.Bool {
    @objc get
  }
  @objc weak public var delegate: SFDialPlateSDK.SFDialPlateManagerDelegate?
  @objc public func pushDialPlate(devIdentifier: Swift.String, type: Swift.UInt16, zipPath: Foundation.URL, maxFileSliceLength: Swift.Int = 1024, withByteAlign: Swift.Bool = false)
  @objc public func pushDialPlate(devIdentifier: Swift.String, type: Swift.UInt16, files: [SFDialPlateSDK.SFFile], maxFileSliceLength: Swift.Int = 1024, withByteAlign: Swift.Bool = false)
  @objc public func stop()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class SFLogManager : ObjectiveC.NSObject {
  @objc public static var share: SFDialPlateSDK.SFLogManager
  @objc public var openLog: Swift.Bool
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class SFResponseBaseModel : ObjectiveC.NSObject {
  @objc deinit
}
